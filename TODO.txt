- Add readme to Example03
- Add check for no-arg constructor to metamodel building
- Add addAttributeDescriptor and addAttributeContext methods taking a string - field name
- Add more examples - e.g. using Sesame contexts, using OWL2Query, using Spring
- When OWL2Java generates classes and they already exist, rewrite only the fields and getters and setters, keep any other code intact
- Perhaps we should use FieldSpecifications instead of Fields when iterating in calculate changes and clone building,
    it would by default skip transient fields and it would simplify adding inheritance support
- Use SLF4J for logging?
- Support for data property collections?
- Add a @Context annotation, which would specify that a field/entity should always be loaded from the specified context.
    This could be overwritten with a descriptor passed to EM
- How to enhance query results with transactional changes? Sesame
- When an entity is removed, there should be some IC check that verifies it is not referenced from any other entity
- Revisit the way objects and clones are cached in UoW, CloneBuilder and RepositoryMap
    - There should be some unambiguous workflow
    - And how they are loaded, especially as attributes of other objects
- Add support for EntityManager.getReference
- Add support for orphanRemoval attribute in object properties
- Add support for namespace definition - on class and package level
- Add support for Lobs and Blobs
- Modify OntoDriver API to support Fetch joins
- Do some research on how to implement class hierarchies in JOPA
- Define schema for persistence.xml for JOPA
- Research whether we could replace aspectj with cglib-generated proxies
- Consider adding support for JNDI data source lookup
- IC - SHACL
